Dashboard tri_test {
  title: 'Tri Test'
  description: ''''''

  view: CanvasLayout {
    label: 'View 1'
    height: 3620
    grid_size: 20
    mobile {
      mode: 'auto'
    }
    block v1 {
      position: pos(100, 20, 400, 300)
      layer: 2
    }
    block f1 {
      position: pos(520, 20, 300, 100)
      layer: 3
    }
    block v2 {
      position: pos(820, 20, 400, 300)
      layer: 4
    }
    block f2 {
      position: pos(720, 500, 300, 100)
      layer: 5
    }
    block f3 {
      position: pos(880, 460, 300, 100)
      layer: 6
    }
    block v3 {
      position: pos(480, 640, 680, 2500)
      layer: 7
    }
    block v4 {
      position: pos(40, 380, 400, 300)
      layer: 8
    }
    block f4 {
      position: pos(460, 260, 340, 100)
      layer: 9
    }
    block v_cx59 {
      position: pos(20, 940, 400, 300)
      layer: 10
    }
    block f_rfyo {
      position: pos(140, 1380, 300, 100)
      layer: 11
    }
    block v_2e00 {
      position: pos(1160, 1060, 400, 300)
      layer: 1
    }
    block v_gcit {
      position: pos(1200, 620, 400, 300)
      layer: 1
    }
    width: 2220
  }

  theme: H.themes.classic.extend(
    {
      custom_css: @css 
     .ci-download-tab-xlsx, .ci-download-excel {
      display:none;
     }
     #block-v1 {
      display:none;
     }
    ;;
    }
  )
  block v1: VizBlock {
    label: 'CLV'
    viz: DataTable {
      dataset: demo_ecommerce
      fields: [
        VizFieldFull {
          ref: ref('order_master', 'order_id')
          format {
            type: 'number'
            pattern: 'inherited'
          }
        },
        VizFieldFull {
          ref: ref('order_master', 'user_id')
          format {
            type: 'number'
            pattern: 'inherited'
          }
        },
        VizFieldFull {
          ref: ref('order_master', 'amount')
          format {
            type: 'number'
            pattern: 'inherited'
          }
        },
        VizFieldFull {
          ref: ref('order_master', 'customer_lifetime_value')
          format {
            type: 'number'
            pattern: 'inherited'
          }
        }
      ]
      settings {
        show_row_number: true
        row_limit: 5000
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  block f1: FilterBlock {
    label: 'aaaa'
    type: 'field'
    source: FieldFilterSource {
      dataset: demo_ecommerce
      field: ref('order_master', 'status')
    }
    default {
      operator: 'is'
      value: 'delivered'
    }
  }
  block v2: VizBlock {
    label: 'vggg'
    viz: DataTable {
      dataset: demo_ecommerce_metrics
      fields: [
        VizFieldFull {
          ref: ref('order_master', 'order_id')
          format {
            type: 'number'
            pattern: 'inherited'
          }
        },
        VizFieldFull {
          ref: ref('order_master', 'user_id')
          format {
            type: 'number'
            pattern: 'inherited'
          }
        },
        VizFieldFull {
          ref: ref('order_master', 'amount')
          format {
            type: 'number'
            pattern: 'inherited'
          }
        },
        VizFieldFull {
          ref: ref('order_master', 'clv_dimensionalized')
          format {
            type: 'number'
            pattern: 'inherited'
          }
        }
      ]
      settings {
        show_row_number: true
        row_limit: 5000
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  block f2: FilterBlock {
    label: 'CLV Filter'
    type: 'field'
    source: FieldFilterSource {
      dataset: demo_ecommerce_metrics
      field: ref('order_master', 'clv_dimensionalized')
    }
    default {
      operator: 'is'
      value: []
    }
  }
  block f3: FilterBlock {
    label: 'CVN'
    type: 'field'
    source: FieldFilterSource {
      dataset: demo_ecommerce_metrics
      field: ref('order_master', 'customer_lifetime_value')
    }
    default {
      operator: 'is'
      value: []
    }
  }
  block v3: VizBlock {
    label: 'Test 1'
    viz: DataTable {
      dataset: buyers_sellers_transactions
      calculation metric_cdab8ae {
        label: 'Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label'
        formula: @aql 1;;
        calc_type: 'measure'
        data_type: 'number'
      }
      calculation metric_e620fbb {
        label: 'Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label Long long label '
        formula: @aql 1;;
        calc_type: 'measure'
        data_type: 'number'
      }
      fields: [
        VizFieldFull {
          label: 'Full Name (Team Lead)'
          ref: ref('buyers', 'full_name')
          format {
            type: 'text'
          }
        },
        VizFieldFull {
          label: 'Metric'
          ref: ref('transactions_buyers_sellers', 'quantity')
          aggregation: 'sum'
          format {
            type: 'number'
            pattern: 'inherited'
          }
        },
        VizFieldFull {
          label: 'Full Name (Supervisor)'
          ref: ref('sellers', 'full_name')
          format {
            type: 'text'
          }
        },
        VizFieldFull {
          ref: 'metric_cdab8ae'
          format {
            type: 'number'
            pattern: 'inherited'
          }
        },
        VizFieldFull {
          ref: 'metric_e620fbb'
          format {
            type: 'number'
            pattern: 'inherited'
          }
        }
      ]
      settings {
        wrap_header_text: true
        show_row_number: true
        sorts: [
          SortSetting {
            field_index: 0
            direction: 'asc'
          },
          SortSetting {
            field_index: 2
            direction: 'asc'
          }
        ]
        row_limit: 5000
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
        frozen_columns: 0
      }
    }
  }
  block v4: VizBlock {
    label: 'XYZ'
    viz: DataTable {
      dataset: ecom_dataset_vux
      theme {
        table {
          general {
            borders {
              outer: true
              horizontal: true
            }
          }
        }
      }
      fields: [
        VizFieldFull {
          ref: r(ecom_dataset_vux.total_orders)
          format {
            type: 'number'
            pattern: 'inherited'
          }
          uname: 'custom_total_orders'
        },
        VizFieldFull {
          ref: r(order_master.order_id)
          format {
            type: 'number'
            pattern: 'inherited'
          }
        }
      ]
      settings {
        show_row_number: true
        conditional_formats: [
          ConditionalFormat {
            key: 'custom_total_orders'
            format: SingleFormat {
              condition {
                operator: 'is'
                value: 102
              }
              text_color: '#328159'
              background_color: '#B5E3CD'
              apply_to_row: true
            }
          }
        ]
        row_limit: 5000
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
        column_styles: [
          ColumnStyle {
            key: '_holistics_row_number_'
            width: 198
          }
        ]
      }
    }
  }
  block f4: FilterBlock {
    label: 'Transactions Transaction Date'
    type: 'field'
    source: FieldFilterSource {
      dataset: buyers_sellers_transactions
      field: ref('transactions_buyers_sellers', 'transaction_date')
    }
    default {
      operator: 'matches'
      value: '$H_NIL$'
    }
  }
  block v_cx59: VizBlock {
    label: 'Total Orders by Country Code'
    viz: FilledMap {
      dataset: demo_ecommerce
      location {
        field: VizFieldFull {
          ref: r(ecommerce_cities.country_code)
          format {
            type: 'text'
          }
        }
        primary_field: true
      }
      value: VizFieldFull {
        ref: r(demo_ecommerce.total_orders)
        format {
          type: 'number'
          pattern: 'inherited'
        }
      }
      settings {
        value_colors {
          min {
            value: 1718
            color: '#FDE725'
          }
          mid {
            value: 2761
          }
          max {
            value: 3804
            color: '#21908D'
          }
        }
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  block f_rfyo: FilterBlock {
    label: 'Order Master Status'
    type: 'field'
    source: FieldFilterSource {
      dataset: demo_ecommerce
      field: r(order_master.status)
    }
    default {
      operator: 'is'
      value: []
    }
  }
  block v_2e00: VizBlock {
    label: 'ABC'
    viz: ColumnChart {
      dataset: ecom_dataset_vux
      filter {
        field: r(order_master.order_created_at)
        operator: 'matches'
        value: 'this year'
      }
      theme {
        table {
          general {
            borders {
              outer: true
              horizontal: true
            }
          }
        }
      }
      x_axis: VizFieldFull {
        ref: r(order_master.order_created_at)
        transformation: 'datetrunc month'
        format {
          type: 'date'
          pattern: 'LLL yyyy'
        }
      }
      legend: VizFieldFull {
        ref: r(order_master.status)
        format {
          type: 'text'
        }
      }
      y_axis {
        series {
          field: VizFieldFull {
            ref: r(ecom_dataset_vux.total_orders)
            format {
              type: 'number'
              pattern: 'inherited'
            }
            uname: 'custom_total_orders'
          }
          settings {
            color_palette: 0
          }
        }
      }
      settings {
        row_limit: 5000
        x_axis_show_null_datetime: false
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  block v_gcit: VizBlock {
    label: 'Count of City Name by Country Code and Delivery Attempts'
    viz: Heatmap {
      dataset: demo_ecommerce
      lng: VizFieldFull {
        ref: r(order_master.delivery_attempts)
        format {
          type: 'number'
          pattern: 'inherited'
        }
      }
      lat: VizFieldFull {
        ref: r(ecommerce_cities.country_code)
        format {
          type: 'text'
        }
      }
      value: VizFieldFull {
        ref: r(ecommerce_cities.name)
        aggregation: 'count'
        format {
          type: 'number'
          pattern: 'inherited'
        }
      }
      settings {
        value_colors {
          min {
            value: 1718
            color: '#FDE725'
          }
          mid {
            value: 2761
          }
          max {
            value: 3804
            color: '#21908D'
          }
        }
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  interactions: [
    FilterInteraction {
      from: 'f1'
      to: [
        CustomMapping {
          block: 'f_rfyo'
          disabled: true
        }
      ]
    },
    FilterInteraction {
      from: 'f2'
      to: [
        CustomMapping {
          block: 'f3'
          disabled: true
        }
      ]
    },
    FilterInteraction {
      from: 'f3'
      to: [
        CustomMapping {
          block: 'f2'
          disabled: true
        }
      ]
    },
    FilterInteraction {
      from: 'f_rfyo'
      to: [
        CustomMapping {
          block: 'f1'
          disabled: true
        }
      ]
    }
  ]
}