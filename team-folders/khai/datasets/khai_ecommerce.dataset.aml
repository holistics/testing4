Dataset khai_ecommerce {
  __engine__: 'aql'
  label: 'Ecommerce (from Khai)'
  description: "This is Dataset for AQL testing"
  data_source_name: "demodb"
  models: [
    orders,
    users,
    order_items,
    countries,
    merchants,
    products,
    cities,
    khai_date_d,
    param_model
    ,
    khai_categories
    ,
    time_type
  ]

  relationships: [
    relationship(orders.user_id > users.id, true),
    relationship(order_items.order_id > orders.id, true),
    relationship(cities.country_code > countries.code, true),
    relationship(users.city_id > cities.id, true),
    relationship(order_items.product_id > products.id, true),
    relationship(products.merchant_id > merchants.id, true),
    relationship(merchants.city_id > cities.id, false),
    relationship(orders.created_date > khai_date_d.date_key, true)
    ,
    relationship(products.category_id > khai_categories.id, true)
  ]

  owner: 'khai.to+demo4@holistics.io'

  dimension user_acquired_at {
    model: users
    label: 'User Acquired At'
    type: 'datetime'
    definition: @aql min(orders.created_at) | dimensionalize(users.id) ;;
  }

  dimension user_order_frequency {
    model: users
    label: 'User Order Frequency'
    type: 'text'
    hidden: false
    definition: @aql 
      case(
        when: total_orders < 10, then: '< 10 orders'
        , when: total_orders > 10 and total_orders < 50, then: 'between 10 and 50 orders'
        , when: total_orders > 50, then: '> 50 orders'
        , else: null
      )
      | where(orders.created_at matches (param_model.date_param | first()))
      | dimensionalize(users.id)
     ;;
  }
  dimension country_attribute {
    label: "Country Attribute"
    type: "text"
    description: ""
    definition: @aql H.current_user.country_attribute;;
    model: countries
  }
  dimension is_country {
    label: "Is Country"
    type: "truefalse"
    description: ""
    definition: @aql countries.country_attribute == countries.name;;
    model: countries
  }

  metric revenue {
    label: 'Revenue'
    type: 'number'
    definition: @aql sum(order_items, order_items.quantity * products.price) ;;
  }

  metric total_orders {
    label: 'Total Orders'
    type: 'number'
    definition: @aql count(orders.id) ;;
  }

  metric total_users {
    label: 'Total Users'
    type: 'number'
    definition: @aql count(users.id) ;;
  }

  metric dynamic_metric {
    label: 'Dynamic Metric'
    type: 'number'
    definition: @aql
      case(
        when: (param_model.metric_selection | first()) == 'Revenue'
        , then: revenue
        , when: (param_model.metric_selection | first()) == 'Total Orders'
        , then: total_orders
        , when: (param_model.metric_selection | first()) == 'Total Users'
        , then: total_users
      )
     ;;
  }
}

Dataset extended_khai_ecommnerce = khai_ecommerce.extend({label: 'Test Extended Khai Dset'})